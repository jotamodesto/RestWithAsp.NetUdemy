{
  // Use IntelliSense to find out which attributes exist for C# debugging
  // Use hover for the description of the existing attributes
  // For further information visit https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Docker: Launch .NET Core (Preview)",
      "type": "docker-coreclr",
      "request": "launch",
      // "preLaunchTask": "build",
      "dockerBuild": {},
      "dockerRun": {
        "env": {
          "Kestrel__Certificates__Default__Path": "/root/.dotnet/https/aspnetcore-cert.pfx",
          "Kestrel__Certificates__Default__Password": "restapicert"
        },
        "ports": [
          {
            "hostPort": "5000",
            "containerPort": "5000"
          },
          {
            "hostPort": "5001",
            "containerPort": "5001"
          }
        ],
        "volumes": [
          {
            "localPath": "/home/jmodesto/src/RestWithAsp.NetUdemy/RestWithAspNETUdemy/cert",
            "containerPath": "/root/.dotnet/https",
            "permissions": "rw"
          }
        ]
      }
    },
    {
      "name": ".NET Core Launch (web)",
      "type": "coreclr",
      "request": "launch",
      "preLaunchTask": "build",
      // If you have changed target frameworks, make sure to update the program path.
      "program": "${workspaceFolder}/bin/Debug/netcoreapp2.2/RestWithAspNETUdemy.dll",
      "args": [],
      "cwd": "${workspaceFolder}",
      "stopAtEntry": false,
      // Enable launching a web browser when ASP.NET Core starts. For more information: https://aka.ms/VSCode-CS-LaunchJson-WebBrowser
      "serverReadyAction": {
        "action": "openExternally",
        "pattern": "^\\s*Now listening on:\\s+(https?://\\S+)"
      },
      "env": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      },
      "sourceFileMap": {
        "/Views": "${workspaceFolder}/Views"
      }
    },
    {
      "name": ".NET Core Attach",
      "type": "coreclr",
      "request": "attach",
      "processId": "${command:pickProcess}"
    }
  ]
}
